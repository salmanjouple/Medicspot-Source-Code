/* ----------------------------------------------------------------------------
 * Easy!Appointments - Open Source Web Scheduler
 *
 * @package     EasyAppointments
 * @author      A.Tselegidis <alextselegidis@gmail.com>
 * @copyright   Copyright (c) 2013 - 2016, Alex Tselegidis
 * @license     http://opensource.org/licenses/GPL-3.0 - GPLv3
 * @link        http://easyappointments.org
 * @since       v1.0.0
 * ---------------------------------------------------------------------------- */
(function(){'use strict';var WorkingPlan=function(){this.enableCancel=!1;this.enableSubmit=!1};WorkingPlan.prototype.setup=function(workingPlan){$.each(workingPlan,function(index,workingDay){if(workingDay!=null){$('#'+index).prop('checked',!0);$('#'+index+'-start').val(workingDay.start);$('#'+index+'-end').val(workingDay.end);$.each(workingDay.breaks,function(i,brk){var day=this.convertValueToDay(index);var tr='<tr>'+'<td class="break-day editable">'+GeneralFunctions.ucaseFirstLetter(day)+'</td>'+'<td class="break-start editable">'+brk.start+'</td>'+'<td class="break-end editable">'+brk.end+'</td>'+'<td>'+'<button type="button" class="btn btn-default btn-sm edit-break" title="'+EALang.edit+'">'+'<span class="glyphicon glyphicon-pencil"></span>'+'</button>'+'<button type="button" class="btn btn-default btn-sm delete-break" title="'+EALang['delete']+'">'+'<span class="glyphicon glyphicon-remove"></span>'+'</button>'+'<button type="button" class="btn btn-default btn-sm save-break hidden" title="'+EALang.save+'">'+'<span class="glyphicon glyphicon-ok"></span>'+'</button>'+'<button type="button" class="btn btn-default btn-sm cancel-break hidden" title="'+EALang.cancel+'">'+'<span class="glyphicon glyphicon-ban-circle"></span>'+'</button>'+'</td>'+'</tr>';$('.breaks tbody').append(tr)}.bind(this))}else{$('#'+index).prop('checked',!1);$('#'+index+'-start').prop('disabled',!0);$('#'+index+'-end').prop('disabled',!0)}}.bind(this));this.editableBreakDay($('.breaks .break-day'));this.editableBreakTime($('.breaks').find('.break-start, .break-end'))};WorkingPlan.prototype.editableBreakDay=function($selector){var weekDays={};weekDays[EALang.monday]=EALang.monday;weekDays[EALang.tuesday]=EALang.tuesday;weekDays[EALang.wednesday]=EALang.wednesday;weekDays[EALang.thursday]=EALang.thursday;weekDays[EALang.friday]=EALang.friday;weekDays[EALang.saturday]=EALang.saturday;weekDays[EALang.sunday]=EALang.sunday;$selector.editable(function(value,settings){return value},{type:'select',data:weekDays,event:'edit',height:'30px',submit:'<button type="button" class="hidden submit-editable">Submit</button>',cancel:'<button type="button" class="hidden cancel-editable">Cancel</button>',onblur:'ignore',onreset:function(settings,td){if(!this.enableCancel){return!1}}.bind(this),onsubmit:function(settings,td){if(!this.enableSubmit){return!1}}.bind(this)})};WorkingPlan.prototype.editableBreakTime=function($selector){$selector.editable(function(value,settings){return value},{event:'edit',height:'25px',submit:'<button type="button" class="hidden submit-editable">Submit</button>',cancel:'<button type="button" class="hidden cancel-editable">Cancel</button>',onblur:'ignore',onreset:function(settings,td){if(!this.enableCancel){return!1}}.bind(this),onsubmit:function(settings,td){if(!this.enableSubmit){return!1}}.bind(this)})};WorkingPlan.prototype.bindEventHandlers=function(){$('.working-plan input[type="checkbox"]').click(function(){var id=$(this).attr('id');if($(this).prop('checked')==!0){$('#'+id+'-start').prop('disabled',!1).val('09:00');$('#'+id+'-end').prop('disabled',!1).val('18:00')}else{$('#'+id+'-start').prop('disabled',!0).val('');$('#'+id+'-end').prop('disabled',!0).val('')}});$('.add-break').click(function(){var tr='<tr>'+'<td class="break-day editable">'+EALang.monday+'</td>'+'<td class="break-start editable">09:00</td>'+'<td class="break-end editable">10:00</td>'+'<td>'+'<button type="button" class="btn btn-default btn-sm edit-break" title="'+EALang.edit+'">'+'<span class="glyphicon glyphicon-pencil"></span>'+'</button>'+'<button type="button" class="btn btn-default btn-sm delete-break" title="'+EALang['delete']+'">'+'<span class="glyphicon glyphicon-remove"></span>'+'</button>'+'<button type="button" class="btn btn-default btn-sm save-break hidden" title="'+EALang.save+'">'+'<span class="glyphicon glyphicon-ok"></span>'+'</button>'+'<button type="button" class="btn btn-default btn-sm cancel-break hidden" title="'+EALang.cancel+'">'+'<span class="glyphicon glyphicon-ban-circle"></span>'+'</button>'+'</td>'+'</tr>';$('.breaks').prepend(tr);tr=$('.breaks tr')[1];this.editableBreakDay($(tr).find('.break-day'));this.editableBreakTime($(tr).find('.break-start, .break-end'));$(tr).find('.edit-break').trigger('click');$('.add-break').prop('disabled',!0)}.bind(this));$(document).on('click','.edit-break',function(){var $previousEdt=$(this).closest('table').find('.editable').get();$.each($previousEdt,function(index,editable){if(editable.reset!==undefined){editable.reset()}});$(this).parent().parent().children().trigger('edit');$(this).parent().parent().find('.break-start input, .break-end input').timepicker({currentText:EALang.now,closeText:EALang.close,timeOnlyTitle:EALang.select_time,timeText:EALang.time,hourText:EALang.hour,minuteText:EALang.minutes});$(this).parent().parent().find('.break-day select').focus();$(this).closest('table').find('.edit-break, .delete-break').addClass('hidden');$(this).parent().find('.save-break, .cancel-break').removeClass('hidden');$('.add-break').prop('disabled',!0)});$(document).on('click','.delete-break',function(){$(this).parent().parent().remove()});$(document).on('click','.cancel-break',function(e){var element=e.target;var $modifiedRow=$(element).closest('tr');this.enableCancel=!0;$modifiedRow.find('.cancel-editable').trigger('click');this.enableCancel=!1;$(element).closest('table').find('.edit-break, .delete-break').removeClass('hidden');$modifiedRow.find('.save-break, .cancel-break').addClass('hidden');$('.add-break').prop('disabled',!1)}.bind(this));$(document).on('click','.save-break',function(e){var element=e.target,$modifiedRow=$(element).closest('tr'),start=Date.parse($modifiedRow.find('.break-start input').val()),end=Date.parse($modifiedRow.find('.break-end input').val());if(start>end){$modifiedRow.find('.break-end input').val(start.addHours(1).toString('HH:mm'))}
    this.enableSubmit=!0;$modifiedRow.find('.editable .submit-editable').trigger('click');this.enableSubmit=!1;$modifiedRow.find('.save-break, .cancel-break').addClass('hidden');$(element).closest('table').find('.edit-break, .delete-break').removeClass('hidden');$('.add-break').prop('disabled',!1)}.bind(this))};WorkingPlan.prototype.get=function(){var workingPlan={};$('.working-plan input[type="checkbox"]').each(function(index,checkbox){var id=$(checkbox).attr('id');if($(checkbox).prop('checked')==!0){workingPlan[id]={};workingPlan[id].start=$('#'+id+'-start').val();workingPlan[id].end=$('#'+id+'-end').val();workingPlan[id].breaks=[];$('.breaks tr').each(function(index,tr){var day=this.convertDayToValue($(tr).find('.break-day').text());if(day==id){var start=$(tr).find('.break-start').text(),end=$(tr).find('.break-end').text();workingPlan[id].breaks.push({'start':start,'end':end})}
    workingPlan[id].breaks.sort(function(break1,break2){return break1.start-break2.start})}.bind(this))}else{workingPlan[id]=null}}.bind(this));return workingPlan};WorkingPlan.prototype.timepickers=function(disabled){disabled=disabled||!1;if(disabled==!1){$('.working-plan input[type="text"]').timepicker({timeFormat:'HH:mm',currentText:EALang.now,closeText:EALang.close,timeOnlyTitle:EALang.select_time,timeText:EALang.time,hourText:EALang.hour,minuteText:EALang.minutes,onSelect:function(datetime,inst){var start=Date.parse($(this).parent().parent().find('.work-start').val()),end=Date.parse($(this).parent().parent().find('.work-end').val());if(start>end){$(this).parent().parent().find('.work-end').val(start.addHours(1).toString('HH:mm'))}}})}else{$('.working-plan input').timepicker('destroy')}};WorkingPlan.prototype.reset=function(){};WorkingPlan.prototype.convertValueToDay=function(value){switch(value){case 'monday':return EALang.monday;break;case 'tuesday':return EALang.tuesday;break;case 'wednesday':return EALang.wednesday;break;case 'thursday':return EALang.thursday;break;case 'friday':return EALang.friday;break;case 'saturday':return EALang.saturday;break;case 'sunday':return EALang.sunday;break}};WorkingPlan.prototype.convertDayToValue=function(day){switch(day){case EALang.monday:return'monday';break;case EALang.tuesday:return'tuesday';break;case EALang.wednesday:return'wednesday';break;case EALang.thursday:return'thursday';break;case EALang.friday:return'friday';break;case EALang.saturday:return'saturday';break;case EALang.sunday:return'sunday';break}};window.WorkingPlan=WorkingPlan})()